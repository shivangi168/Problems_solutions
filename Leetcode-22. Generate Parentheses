QUESTION:

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

Example 1:

Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]

SOLUTION:
class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> ans=new ArrayList<>();
        String p="";
        getans(n,0,0,ans,p);
        return ans;
        
        
    }
    public void getans(int n,int o,int c,List<String> res,String str){
        if(o==c && c==n){
            res.add(str);
            return;
        }
        if(o<n){
            getans(n,o+1,c,res,str+'(');
        }
         if(c<o){
                getans(n,o,c+1,res,str+')');
            
        }
    }
}
