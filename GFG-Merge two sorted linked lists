Question
Given two sorted linked lists consisting of N and M nodes respectively. The task is to merge both of the list (in-place) and return head of the merged list.
 

Example 1:

Input:
N = 4, M = 3 
valueN[] = {5,10,15,40}
valueM[] = {2,3,20}
Output: 2 3 5 10 15 20 40
Explanation: After merging the two linked
lists, we have merged list as 2, 3, 5,
10, 15, 20, 40.

solution:

class LinkedList{
{
    //Function to merge two sorted linked list.
    Node sortedMerge(Node head1, Node head2) {
     // This is a "method-only" submission. 
     // You only need to complete this method
     if(head1==null){
         return head2;
     }else if(head2==null){
         return head1;
     }
     else if(head1.data<head2.data){
         head1.next=sortedMerge(head1.next,head2);
         return head1;
     }
     else{
         head2.next=sortedMerge(head1,head2.next);
         return head2;
     }
   } 
   
}

