QUESTION:
1. You are given a string str. The string str will contains numbers only, where each number stands for a key pressed on a mobile phone.
2. The following list is the key to characters map :
    0 -> .;
    1 -> abc
    2 -> def
    3 -> ghi
    4 -> jkl
    5 -> mno
    6 -> pqrs
    7 -> tu
    8 -> vwx
    9 -> yz
3. Complete the body of getKPC function - without changing signature - to get the list of all words that could be produced by the keys in str.
Use sample input and output to take idea about output.

Sample Input:
78

Sample Output:
[tv, tw, tx, uv, uw, ux]

SOLUTION:
import java.util.*;
public class keypadcombination {
    public static void main(String[] args) {
        try (Scanner scn = new Scanner(System.in)) {
            String str=scn.nextLine();
            ArrayList<String> res=new ArrayList<>();
            res=getkpc(str);
            System.out.println(res);
        }
    }
    static String[] codes={";:","abc","def","ghi","jkl","mno","pqrs","tu","vwx","yz"};
    public static ArrayList<String> getkpc(String temp){
        if(temp.length()==0){
            ArrayList<String> ans=new ArrayList<>();
            ans.add("");
            return ans;
        }
        char ch=temp.charAt(0);
        String remp=temp.substring(1);
        ArrayList<String> ans=getkpc(remp);
        ArrayList<String> mine=new ArrayList<>();

        String ptanhi=codes[ch-'0'];
        for(int i=0;i<ptanhi.length();i++){
            char val=ptanhi.charAt(i);
            for(String vall: ans){
                mine.add(val+vall);
            } 
        }
        return mine;

    }
}
